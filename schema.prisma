generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Attachment {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  url       String
  cardId    String   @db.Uuid
  createdAt DateTime @default(now())
  card      Card     @relation(fields: [cardId], references: [id])
}

model Board {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId   Int      @default(autoincrement())
  name      String   @unique
  protected Boolean  @default(false)
  createdAt DateTime @default(now())
  cards     Card[]
  statuses  Status[]
  tags      Tag[]
}

model Card {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String?
  boardId     String       @db.Uuid
  position    Int
  attachments Attachment[]
  board       Board        @relation(fields: [boardId], references: [id])
  status      Status       @relation(fields: [statusId], references: [id])
  tags        Tag[]
  createdAt   DateTime     @default(now())
  statusId    String       @db.Uuid
}

model Status {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  createdAt DateTime @default(now())
  boardId   String   @db.Uuid
  boards    Board    @relation(fields: [boardId], references: [id])
  cards     Card[]
}

model Tag {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  color     String
  fontColor String
  boardId   String   @db.Uuid
  createdAt DateTime @default(now())
  board     Board    @relation(fields: [boardId], references: [id])
  Card      Card?    @relation(fields: [cardId], references: [id])
  cardId    String?  @db.Uuid
}
